esphome:
  name: "${device_name}"

  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

# Always enable the webserver for easy access and manual verification
web_server:
  port: 80
  version: 3

# Enable Home Assistant API
api:

# Updates OTA via ESPHome.
ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (including captive portal below) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback"

captive_portal:

text_sensor:
  # Expose ESPHome version
  - platform: version
    name: "${friendly_name} ESPHome Version"
    hide_timestamp: true

  # WiFi info: IP, (B)SSID
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} Wi-Fi SSID"
    bssid:
      name: "${friendly_name} Wi-Fi BSSID"

sensor:
  # Uptime in seconds
  - platform: uptime
    name: "${friendly_name} Uptime"
  
  # Reports the WiFi signal strength/RSSI in dB: -90dB = Unusable, -80dB = Not Good, -70dB = Okay, -67dB = Very good, > -60dB = Amazing
  - platform: wifi_signal 
    name: "${friendly_name} WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # Reports the WiFi signal strength in %: 20% = Unusable, 40% = Not Good, 60% = Okay, 66% = Very good, > 80% = Amazing
  - platform: copy
    source_id: wifi_signal_db
    name: "${friendly_name} WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""