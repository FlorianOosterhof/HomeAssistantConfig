esphome:
  name: open-air-mini

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:
  level: DEBUG

# This is optional and can be commented out to disable the Web Server
web_server:
  port: 80

# Enable Home Assistant API
api:

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Open-AIR-Mini Fallback"
    password: "ChangeMe@123!"

captive_portal:

globals:
  # Disconnected Mode Max Fan Speed, linked to Disconnected Hum Level Max Speed
  - id: disconnected_max_fan_speed
    type: int
    restore_value: no
    initial_value: "100"
  # Disconnected Mode Medium Fan Speed, linked to Disconnected Hum Level Medium Speed
  - id: disconnected_medium_fan_speed
    type: int
    restore_value: no
    initial_value: "60"
  # Disconnected Mode Default Fan Speed, for humidities lower than Disconnected Hum Level Medium Speed
  # or if NOT using a humidity sensor. Without sensor this speed will be maintained untill a connection
  # to Home Assistant has been restored and your automations can take over.
  - id: disconnected_default_fan_speed
    type: int
    restore_value: no
    initial_value: "25"
  # Disconnected Mode Max Fan Speed Threshold    
  - id: disconnected_hum_level_max_speed
    type: int
    restore_value: no
    initial_value: "75"
  # Disconnected Mode Medium Fan Speed Threshold
  - id: disconnected_hum_level_medium_speed
    type: int
    restore_value: no
    initial_value: "55"

# From V1.4.0 The Sensor pins on the Open AIR Mini are swapped. Correct example is below:
#uart:
##UART For Sensor 2
# - rx_pin: GPIO13
#   tx_pin: GPIO12
#   baud_rate: 9600
#   id: uart_sensor_2
##UART For Sensor 1
# - rx_pin: GPIO25
#   tx_pin: GPIO26
#   baud_rate: 9600
#   id: uart_sensor_1

i2c:
##I2C For Sensor 2
#- id: i2c_sensor_2
#  sda: GPIO19
#  scl: GPIO18
#  scan: false
#  frequency: 400kHz
#I2C For Sensor 1
- id: i2c_sensor_1
  sda: GPIO16
  scl: GPIO4
  scan: false
  frequency: 400kHz

# Status led
status_led:
  pin:
    number: GPIO33

#PWM output for controlling the motor.
output:
  - platform: ledc
    pin:
      number: GPIO15
      ignore_strapping_warning: true
    inverted: true
    id: open_air_mini

fan:
  - platform: speed
    output: open_air_mini
    name: "Open AIR Mini"
    id: fan_motor
    
sensor: 
  - platform: pulse_counter
    pin: GPIO14
    unit_of_measurement: 'RPM'
    name: 'AIR Mini RPM'
    id: open_air_mini_rpm
  - platform: scd4x
    i2c_id: i2c_sensor_1
    co2:
      name: "Open AIR Mini Sensor 1 CO2"
      id: air_Co2
      accuracy_decimals: 0
    temperature:
      name: "Open AIR Mini Sensor 1 Temperature"
      id: air_temperature
      accuracy_decimals: 2
    humidity:
      name: "Open AIR Mini Sensor 1 Humidity"
      id: air_humidity
      accuracy_decimals: 2
    update_interval: 30s
    measurement_mode: periodic

  - platform: sgp4x
    i2c_id: i2c_sensor_1
    voc:
      name: "VOC Index "
      id: air_VOC
    nox:
      name: "NOx Index "
      id: air_NOx
    compensation:
      temperature_source: air_temperature #Make sure to match these if you change ID's.
      humidity_source: air_humidity       #Make sure to match these if you change ID's.
    update_interval: 30s

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""
